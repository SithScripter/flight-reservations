services:
  flight-reservations:
    image: gaumji19/flight-reservations:latest
    container_name: flight-reservations-tests
    depends_on:
      - chrome
      - firefox
    environment:
      - BROWSER=chrome
      - HUB_HOST=selenium-hub
    volumes:
      - ./target:/home/flight-reservations/target # Make sure this path is correct relative to Jenkins workspace
    entrypoint: ""
    command: >
      sh -c "
        # Add diagnostics BEFORE tests
        echo '--- CONTAINER DIAGNOSTICS (BEFORE TESTS) ---'
        echo 'Current Working Directory inside container:' $(pwd)
        echo 'Contents of /home/flight-reservations/:'
        ls -la /home/flight-reservations/
        echo 'Contents of /home/flight-reservations/target/ (should be empty or old):'
        ls -la /home/flight-reservations/target/
        echo '--------------------------------------------'
      
        # Wait for the Grid to be ready
        while ! curl -sSL http://selenium-hub:4444/wd/hub/status | jq -r '.value.ready' | grep 'true' > /dev/null; do
            echo 'Waiting for the Grid to be ready...'
            sleep 1
        done

        echo 'Selenium Grid is up and running. Running tests...'
        # Run tests and capture the exit code if it fails
        # Ensure this command is run from the correct directory if not already in WORKDIR /home/flight-reservations
        java -cp 'libs/*' -Dselenium.grid.hubHost=$${HUB_HOST} org.testng.TestNG test-suites/flight-reservation.xml || EXIT_CODE=$$?

        # Add diagnostics AFTER tests
        echo '--- CONTAINER DIAGNOSTICS (AFTER TESTS) ---'
        echo 'Contents of /home/flight-reservations/target/:'
        ls -la /home/flight-reservations/target/
        echo 'Contents of /home/flight-reservations/target/allure-results/:'
        ls -la /home/flight-reservations/target/allure-results/
        echo 'Permissions of /home/flight-reservations/target/allure-results/:'
        stat -c '%a %n' /home/flight-reservations/target/allure-results/ || true # Use || true to prevent command failure if dir doesn't exist
        echo '-------------------------------------------'

        # Change ownership of generated files to the jenkins user (UID 1000)
        chown -R 1000:1000 target

        # Verify ownership after chown
        echo '--- CONTAINER DIAGNOSTICS (AFTER CHOWN) ---'
        echo 'Contents of /home/flight-reservations/target/ with new ownership:'
        ls -la /home/flight-reservations/target/
        echo '-------------------------------------------'

        # Exit with the original test exit code (or 0 if it passed)
        exit $${EXIT_CODE:-0}
      "
  selenium-hub:
    image: selenium/hub:4.27
    container_name: selenium-hub
    ports:
      - "4444:4444"

  chrome:
    image: selenium/node-chrome:4.27
    shm_size: '2g'
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443

  firefox:
    image: selenium/node-firefox:4.27
    shm_size: '2g'
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
