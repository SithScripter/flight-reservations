services:
  flight-reservations:
    image: gaumji19/flight-reservations:latest
    container_name: flight-reservations-tests
    depends_on:
      - chrome
      - firefox
    environment:
      - BROWSER=chrome
      - HUB_HOST=selenium-hub
    # Using an absolute path for the host side is often more reliable
    # Ensure the Jenkins workspace is correctly mapped.
    # The /var/jenkins_home/workspace/run-tests is your Jenkins workspace,
    # and we want its 'target' subdirectory to be mapped to the container's '/home/flight-reservations/target'
    volumes:
      - ./target:/home/flight-reservations/target # Keep this as it is, as Jenkins' PWD should be the workspace
#      - ~/.m2:/root/.m2
      - /var/jenkins_home/.m2:/root/.m2
    # The entrypoint and command are set to ensure the container runs the tests
    entrypoint: ""
    command: >
      sh -c "
        # Ensure the target directory exists within the container BEFORE Maven runs
        mkdir -p /home/flight-reservations/target/allure-results
        # Give it explicit permissions just in case
        chmod 777 /home/flight-reservations/target /home/flight-reservations/target/allure-results

        echo '--- CONTAINER DIAGNOSTICS (BEFORE TESTS) ---'
        echo 'Current Working Directory inside container:' $(pwd)
        echo 'Contents of /home/flight-reservations/:'
        ls -la /home/flight-reservations/
        echo 'Contents of /home/flight-reservations/target/ (should be empty or old):'
        ls -la /home/flight-reservations/target/
        echo '--------------------------------------------'

        while ! curl -sSL http://selenium-hub:4444/wd/hub/status | jq -r '.value.ready' | grep 'true' > /dev/null; do
            echo 'Waiting for the Grid to be ready...'
            sleep 1
        done

        echo 'Selenium Grid is up and running. Running tests...'
        # Run tests - ensure Maven writes to its CWD 'target'
        # The 'mvn clean' should clean the target directory.
        # Ensure 'mvn clean test' is run. Your current command uses TestNG directly.
        # This is where the discrepancy might be: if TestNG is writing to 'target'
        # but Maven's lifecycle wasn't properly invoked, it might not be.
        # If your TestNG setup correctly creates target, then continue.
        # However, for Allure results, usually Maven is responsible.
      
        # Original command:
        # java -cp 'libs/*' -Dselenium.grid.hubHost=$${HUB_HOST} org.testng.TestNG test-suites/flight-reservation.xml || EXIT_CODE=$$?
        
        echo "Checking internet connectivity..."
        apk add --no-cache bind-tools curl
        nslookup repo.maven.apache.org || true
        curl -I https://repo.maven.apache.org || true
        
        # Let's try running Maven directly, as it manages 'target' and Allure listener
        # Removed -DsuiteXmlFile as it's handled by pom.xml
        mvn clean test -Dselenium.grid.hubHost=$${HUB_HOST} || EXIT_CODE=$$?


        echo '--- CONTAINER DIAGNOSTICS (AFTER TESTS) ---'
        echo 'Contents of /home/flight-reservations/target/:'
        ls -la /home/flight-reservations/target/
        echo 'Contents of /home/flight-reservations/target/allure-results/:'
        ls -la /home/flight-reservations/target/allure-results/
        echo 'Permissions of /home/flight-reservations/target/allure-results/:'
        stat -c '%a %n' /home/flight-reservations/target/allure-results/ || true
        echo '-------------------------------------------'

        # Change ownership of generated files to the jenkins user (UID 1000)
        # This is for files generated by Maven, not the directory itself if it's host-mounted.
        # But it doesn't hurt.
        chown -R 1000:1000 target

        # Verify ownership after chown
        echo '--- CONTAINER DIAGNOSTICS (AFTER CHOWN) ---'
        echo 'Contents of /home/flight-reservations/target/ with new ownership:'
        ls -la /home/flight-reservations/target/
        echo '-------------------------------------------'

        exit $${EXIT_CODE:-0}
      "
  selenium-hub:
    image: selenium/hub:4.27
    container_name: selenium-hub
    ports:
      - "4444:4444"

  chrome:
    image: selenium/node-chrome:4.27
    shm_size: '2g'
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443

  firefox:
    image: selenium/node-firefox:4.27
    shm_size: '2g'
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
